{"version":3,"sources":["./src/app/cake-details/cake-details.component.html","./src/app/cake-details/cake-details.component.ts","./src/app/additem/additem.component.ts","./src/app/additem/additem.component.html","./src/app/forget-password/forget-password.component.ts","./src/app/forget-password/forget-password.component.html","./src/app/login-service.service.ts","./src/app/add-user/add-user.component.ts","./src/app/add-user/add-user.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/data.ts","./src/environments/environment.ts","./src/app/search-results-dis/search-results-dis.component.html","./src/app/search-results-dis/search-results-dis.component.ts","./src/app/test.directive.ts","./src/app/authinterceptor.service.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/adminsearch/adminsearch.component.ts","./src/app/adminsearch/adminsearch.component.html","./src/app/forgot/forgot.component.ts","./src/app/forgot/forgot.component.html","./src/app/cake-highlight.directive.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/filter/filter.component.ts","./src/app/filter/filter.component.html","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/user-list/user-list.component.html","./src/app/user-list/user-list.component.ts","./src/app/app.module.ts","./src/app/myorders/myorders.component.ts","./src/app/myorders/myorders.component.html","./src/app/editform/editform.component.html","./src/app/editform/editform.component.ts","./src/app/cart/cart.component.html","./src/app/cart/cart.component.ts","./src/app/cake-slider/cake-slider.component.html","./src/app/cake-slider/cake-slider.component.ts","./src/app/pagination/pagination.component.html","./src/app/pagination/pagination.component.ts","./src/app/user-list.service.ts","./src/app/search-cake.directive.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/card/card.component.html","./src/app/card/card.component.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/search/search.component.ts","./src/app/search/search.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"cake-details-Container\">\n  <ul class=\"cart-products-list flex\" *ngIf=\"!dataloaded\">\n    <p>\n      <img class=\"loading\" src=\"https://i.stack.imgur.com/hzk6C.gif\" alt=\"\" />\n      Cake Details...\n    </p>\n  </ul>\n  <div *ngIf=\"dataloaded\">\n    <div class=\"cake-img-ingredient\">\n      <div class=\"cake-img\">\n        <span *ngIf=\"!cake.eggless\"\n          ><img src=\"assets/nonVeg.png\" alt=\"\"\n        /></span>\n        <span *ngIf=\"cake.eggless\"><img src=\"assets/veg.png\" alt=\"\" /></span>\n        <img [src]=\"cake.image\" alt=\"\" />\n      </div>\n      <div class=\"ingredients\">\n        <p class=\"heading\">Ingredients:</p>\n        <ul class=\"infredient-list\">\n          <li *ngFor=\"let ing of cake.ingredients\">\n            <ul>\n              <li>{{ ing }}</li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"cake-data\">\n      <div class=\"cake-description\">\n        <h1>{{ cake.name }}</h1>\n\n        <div class=\"userReview\">\n          <div class=\"rate\">\n            <span\n              class=\"fa fa-star {{ cake.ratings >= 1 ? 'checked' : '' }}\"\n            ></span>\n            <span\n              class=\"fa fa-star {{ cake.ratings >= 2 ? 'checked' : '' }}\"\n            ></span>\n            <span\n              class=\"fa fa-star {{ cake.ratings >= 3 ? 'checked' : '' }}\"\n            ></span>\n            <span\n              class=\"fa fa-star {{ cake.ratings >= 4 ? 'checked' : '' }}\"\n            ></span>\n            <span\n              class=\"fa fa-star {{ cake.ratings >= 5 ? 'checked' : '' }}\"\n            ></span>\n            <p>{{ cake.ratings }}</p>\n          </div>\n          <div class=\"noOfReviews\">\n            <p>{{ cake.reviews }} Reviews</p>\n          </div>\n        </div>\n\n        <div class=\"cake-description-text\">\n          <p>{{ cake.description }}</p>\n          <p class=\"price highlight\">\n            <span class=\"heading\">Current Price :</span>\n            ₹ {{ cake.price }}\n          </p>\n          <p>{{ cake.buyerAvgReview }}</p>\n          <p class=\"weight\">\n            <span class=\"heading\">Weight :</span>{{ cake.weight }} Kg\n          </p>\n          <p class=\"flavour highlight\">\n            <span class=\"heading\">Flavour :</span> {{ cake.flavour }}\n          </p>\n          <p class=\"type\"><span>Type :</span> {{ cake.type }}</p>\n        </div>\n      </div>\n\n      <div class=\"cake-buttons\">\n        <button class=\"btn btn-custom cart\" (click)=\"addToCart()\">\n          Add To Cart\n        </button>\n        <button class=\"btn btn-custom wishlist\">\n          <span class=\"fas fa-heart\"></span>\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-cake-details',\n  templateUrl: './cake-details.component.html',\n  styleUrls: ['./cake-details.component.css'],\n})\nexport class CakeDetailsComponent implements OnInit {\n  cake: any = {};\n  dataloaded: any = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cs: UserListService,\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private router: Router\n  ) {\n    const id = +this.route.snapshot.params.cakeId;\n    this.http.get(this.cs.apiUrl + 'cake/' + id).subscribe(\n      (res: any) => {\n        console.log(res.data);\n        this.cake = res.data;\n        this.dataloaded = true;\n      },\n      (req) => {}\n    );\n  }\n  addToCart() {\n    if (!localStorage.loginUser) {\n      this.toastr.warning('Login To use Add To Cart');\n      setTimeout(() => {\n        this.router.navigate(['/login']);\n      }, 2000);\n    }\n    if (localStorage.loginUser) {\n      let user = JSON.parse(localStorage.loginUser),\n        cakeObj = {\n          cakeid: this.cake.cakeid,\n          name: this.cake.name,\n          image: this.cake.image,\n          weight: this.cake.weight,\n          price: this.cake.price,\n        };\n\n      // generating http post request\n      this.http.post(this.cs.apiUrl + 'addcaketocart', cakeObj).subscribe(\n        (res: any) => {\n          if (res.data) this.toastr.success(res.message);\n          else this.toastr.warning(res.message);\n        },\n        (err) => {\n          console.log(err);\n          this.toastr.error(err.message);\n        }\n      );\n    }\n  }\n  ngOnInit(): void {}\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-additem',\n  templateUrl: './additem.component.html',\n  styleUrls: ['./additem.component.css'],\n})\nexport class AdditemComponent implements OnInit {\n  // @Input() weight: any;\n  cake: any = {};\n\n  constructor() {}\n\n  ngOnInit(): void {}\n  addItem() {\n    console.log(this.cake);\n  }\n  // ngOnChanges(changes: any) {\n  //   console.log(changes);\n  // }\n}\n","<div class=\"additem-section\">\n  <h1>AddItem</h1>\n  <form>\n    <div class=\"form-group\">\n      <input\n        name=\"name\"\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Enter Cake Name\"\n        [(ngModel)]=\"cake.name\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <input\n        name=\"image\"\n        type=\"file\"\n        class=\"form-control\"\n        [(ngModel)]=\"cake.image\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <input\n        name=\"price\"\n        type=\"text\"\n        placeholder=\"enter price\"\n        class=\"form-control\"\n        [(ngModel)]=\"cake.price\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <input\n        type=\"text\"\n        name=\"weight\"\n        placeholder=\"Enter weight\"\n        class=\"form-control\"\n        [(ngModel)]=\"cake.weight\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <div class=\"form-check\">\n        <input\n          class=\"form-check-input\"\n          type=\"checkbox\"\n          id=\"gridCheck\"\n          name=\"checkBox\"\n          [(ngModel)]=\"cake.type\"\n        />\n        <label class=\"form-check-label\" for=\"gridCheck\"> Eggless </label>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <select\n        name=\"category\"\n        class=\"form-control\"\n        id=\"FormControlSelect\"\n        [(ngModel)]=\"cake.category\"\n      >\n        <option>Categories</option>\n        <option>Black Forest</option>\n        <option>Vanilla</option>\n        <option>pineapple</option>\n        <option>Strawberry</option>\n      </select>\n    </div>\n    <div class=\"form-group\">\n      <textarea\n        class=\"form-control\"\n        id=\"FormControlTextarea1\"\n        rows=\"3\"\n        name=\"description\"\n        placeholder=\"Enter Description\"\n        [(ngModel)]=\"cake.description\"\n      ></textarea>\n    </div>\n    <button type=\"submit\" (click)=\"addItem()\" class=\"btn btn-primary\">\n      Add Item\n    </button>\n  </form>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginServiceService } from '../login-service.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.css'],\n})\nexport class ForgetPasswordComponent implements OnInit {\n  user: any = {};\n  constructor(\n    private ls: LoginServiceService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private cs: UserListService\n  ) {\n    if (this.route.snapshot.queryParams.q) {\n      this.user.email = this.route.snapshot.queryParams.q;\n    }\n  }\n\n  ngOnInit(): void {}\n  getPass() {\n    // check for empty email/password field\n    if (!this.user.email || this.user.email === ' ') {\n      this.toastr.warning('Email field should not be empty!!');\n      return;\n    }\n    // validate Email/password field if not empty\n    if (this.ls.validateEmail(this.user.email)) {\n      const apiUrl = this.cs.apiUrl + 'recoverpassword';\n      this.http.post(apiUrl, this.user).subscribe(\n        (res: any) => {\n          console.log(res);\n\n          if (res.message === 'Password Sent to your email') {\n            this.toastr.success(res.message, '');\n            setTimeout(() => {\n              this.toastr.info('Redirecting to login page..', '', {\n                progressBar: true,\n              });\n              setTimeout(() => {\n                this.router.navigate(['/login']);\n              }, 2000);\n            }, 1000);\n            return;\n          } else {\n            this.toastr.warning(res.message);\n          } // this.ls.loginUser = res.token ? res : null;\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    } else this.toastr.error('Invalid Email Id/Password');\n  }\n}\n","<div class=\"login-section\">\n  <h1>Forgot Password</h1>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"email\">Email address</label>\n      <input\n        name=\"email\"\n        type=\"email\"\n        class=\"form-control\"\n        id=\"email\"\n        [(ngModel)]=\"user.email\"\n        aria-describedby=\"emailHelp\"\n      />\n    </div>\n\n    <button type=\"submit\" (click)=\"getPass()\" class=\"btn btn-primary\">\n      Get Password\n    </button>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginServiceService {\n  constructor() {}\n  loginUser: any;\n  validateEmail(email: any) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\nimport { LoginServiceService } from '../login-service.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css'],\n})\nexport class AddUserComponent implements OnInit {\n  user: any = {};\n  constructor(\n    private userList: UserListService,\n    private ls: LoginServiceService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {}\n  addUser() {\n    if (this.ls.validateEmail(this.user.email)) {\n      this.userList.users.push(this.user);\n      this.user = {};\n    } else this.toastr.error('Please Enter a Valid Email ID ');\n  }\n}\n","<div class=\"signup-section\">\n  <h1>Add user</h1>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"user.name\"\n      />\n      <label for=\"img\">User Image Url</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"img\"\n        name=\"img\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"user.image\"\n      />\n      <!-- <small id=\"emailHelp\" class=\"form-text text-muted\"\n        >We'll never share your email with anyone else.</small\n      > -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input\n        type=\"email\"\n        name=\"ema'\"\n        [(ngModel)]=\"user.email\"\n        class=\"form-control\"\n        id=\"email\"\n      />\n    </div>\n\n    <button type=\"submit\" (click)=\"addUser()\" class=\"btn btn-primary\">\n      Add User\n    </button>\n  </form>\n</div>\n","<div>\n  <app-cake-slider></app-cake-slider>\n</div>\n\n<app-search></app-search>\n\n<!-- <div class=\"cake-list\" *ngIf=\"!cs.cakeSearch.length\">\n  <app-card *ngFor=\"let cake of cakeList\" [cake]=\"cake\"></app-card>\n</div> -->\n\n<div class=\"cake-list\">\n  <app-card *ngFor=\"let cake1 of cs.cakeSearch\" [cake]=\"cake1\"></app-card>\n\n  <div *ngIf=\"cs.cakeSearch.length === 0\" class=\"no-query\">\n    <p>\n      <img src=\"assets/404.png\" alt=\"no-found\" /><br />\n      No Cake found.(404)!!\n    </p>\n  </div>\n  <!-- <app-pagination\n    [cakesArr]=\"cs.cakeList\"\n    class=\"w-100 m-2x\"\n    *ngIf=\"cs.cakeList.length\"\n  ></app-pagination> -->\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  cakeList: any;\n\n  constructor(public cs: UserListService, private http: HttpClient) {\n    \n   \n  }\n\n  ngOnInit(): void {\n    \n  }\n}\n","export const trainees = [\r\n  {\r\n    name: 'harshit Dubey',\r\n    dobYear: '1999',\r\n    veg: true,\r\n    avatar:\r\n      'https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg',\r\n  },\r\n  {\r\n    name: 'Rohit',\r\n    dobYear: '1996',\r\n    veg: false,\r\n    avatar:\r\n      'https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg',\r\n  },\r\n  {\r\n    name: 'Abhishek',\r\n    dobYear: '1997',\r\n    veg: false,\r\n    avatar:\r\n      'https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg',\r\n  },\r\n  {\r\n    name: 'Amar',\r\n    dobYear: '1995',\r\n    veg: true,\r\n    avatar:\r\n      'https://image.freepik.com/free-vector/businessman-character-avatar-icon-vector-illustration-design_24877-18271.jpg',\r\n  },\r\n];\r\n\r\nexport const cakeList = [\r\n  {\r\n    id: 1,\r\n    weight: '5 kg',\r\n    name: 'Wedding cake',\r\n    noOfReviews: 100,\r\n    flavour: 'vanilla',\r\n    ingredients: ['Butter ', 'Vanilla', 'Eggs'],\r\n\r\n    userRate: '4.1',\r\n    price: '200',\r\n    buyerAvgReview: '90% of buyers Love this cake!!😋',\r\n    image: 'assets/cake5.jpg',\r\n    type: 'General',\r\n    nonVeg: true,\r\n    des: 'A Big Party Vanilla Cake for a party of 100 people',\r\n  },\r\n  {\r\n    id: 2,\r\n    weight: '3 kg',\r\n    noOfReviews: 150,\r\n    userRate: '4.0',\r\n\r\n    price: '500',\r\n    buyerAvgReview: '98% of buyers Love this cake!!😋',\r\n    name: 'Chocolate Drip Cake',\r\n    image: 'assets/cake4.jpg',\r\n    flavour: 'Chocolate',\r\n    type: 'General',\r\n    ingredients: [' Dark chocolate', 'Eggs', 'Brown sugar'],\r\n    nonVeg: false,\r\n    des: 'A small Party Chocolate Drip Cake for a party of 10 people',\r\n  },\r\n  {\r\n    id: 3,\r\n    weight: '2 kg',\r\n    price: '200',\r\n    noOfReviews: 190,\r\n    userRate: '3.0',\r\n    ingredients: ['Kit Kat chocolate', 'butter', 'milk'],\r\n\r\n    buyerAvgReview: '99% of buyers Love this cake!!😋',\r\n    flavour: 'kit Kat',\r\n    name: 'Kit Kat cake',\r\n    type: 'General',\r\n    nonVeg: true,\r\n    image: 'assets/Kit-Kat-cake3.jpg',\r\n    des: 'A childern Party Kit Kat cake for a party of 10 people',\r\n  },\r\n  {\r\n    id: 4,\r\n    weight: '6 kg',\r\n    userRate: '5.0',\r\n    ingredients: ['Strawberries ', 'Whipped cream', 'Chocolate'],\r\n\r\n    name: 'Black Forest cake',\r\n    buyerAvgReview: '91% of buyers Love this cake!!😋',\r\n    flavour: 'Chocolate',\r\n    noOfReviews: 180,\r\n    nonVeg: false,\r\n    price: '600',\r\n    type: 'General',\r\n\r\n    image: 'assets/cake2.jpg',\r\n    des: 'For Chocolate lover Black Forest cake for a party of 15 people',\r\n  },\r\n  {\r\n    id: 5,\r\n    weight: '7 kg',\r\n    userRate: '3.1',\r\n    ingredients: ['star shaped candy', 'Whipped cream', 'Chocolate'],\r\n    nonVeg: true,\r\n    flavour: 'Chocolate',\r\n    name: 'Our Special cake',\r\n    noOfReviews: 90,\r\n    buyerAvgReview: '89% of buyers Love this cake!!😋',\r\n    type: 'Special',\r\n    price: '1000',\r\n    image: 'assets/cake1.jpg',\r\n    des: 'Our Special cake for a special party of 30 people',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'Chocolate Cheese Cake',\r\n    userRate: '4.0',\r\n    noOfReviews: 200,\r\n    buyerAvgReview: '92% of buyers Love this cake!!😋',\r\n    flavour: 'Chocolate & Cheese',\r\n    ingredients: ['Cheese', 'Whipped cream', 'Chocolate'],\r\n    price: 1300,\r\n    type: 'General',\r\n    image:\r\n      'https://res.cloudinary.com/ashudev/image/upload/v1615286247/kzzsqvp1ydkrnat07zjr.jpg',\r\n\r\n    weight: '1 kg',\r\n    nonVeg: true,\r\n    des: 'For Cheese lover Chocolate Cheese Cake for a party of 8 people',\r\n  },\r\n];\r\n\r\nexport const sliderImgs = [\r\n  'https://images.freekaamaal.com/store_desc_images/1526558623.jpg',\r\n  'https://i1.wp.com/www.frugalfeeds.com.au/wp-content/uploads/2016/06/Lindt-Lava-Cake.png',\r\n  'https://www.frugalfeeds.nz/wp-content/uploads/2018/09/Burger-King-Molten-Lava-Cake.png',\r\n];\r\n\r\nexport const users = [\r\n  {\r\n    fullName: 'Harshit Dubey',\r\n    email: 'harshit199@gmail.com',\r\n    password: '1234',\r\n  },\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"sort-by-price\">\n  <form class=\"row g-3\">\n    <div class=\"col-auto\">\n      <label for=\"inputPassword2\" class=\"visually-hidden\">min-Price</label>\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        id=\"minPrice\"\n        name=\"minPrice\"\n        placeholder=\"Min-Price\"\n        [(ngModel)]=\"minPrice\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <label for=\"inputPassword2\" class=\"visually-hidden\">Max-price</label>\n      <input\n        type=\"number\"\n        class=\"form-control\"\n        id=\"maxPrice\"\n        name=\"maxPrice\"\n        placeholder=\"Max-price\"\n        [(ngModel)]=\"maxPrice\"\n      />\n    </div>\n    <div class=\"col-auto\">\n      <button\n        type=\"submit\"\n        (click)=\"sortByPrice()\"\n        class=\"btn btn-primary mb-3\"\n      >\n        Sort\n      </button>\n    </div>\n  </form>\n</div>\n<div class=\"cake-list\">\n  <app-card *ngFor=\"let cake of cakesList\" [cake]=\"cake\"></app-card>\n  <div *ngIf=\"cakesList.length === 0\" class=\"no-query\">\n    <p>\n      <img src=\"assets/404.png\" alt=\"no-found\" /><br />\n      No Cake found!. For your Search Query!\n    </p>\n  </div>\n</div>\n","import { query } from '@angular/animations';\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-search-results-dis',\n  templateUrl: './search-results-dis.component.html',\n  styleUrls: ['./search-results-dis.component.css'],\n})\nexport class SearchResultsDisComponent implements OnInit {\n  // searchQuery: any = 'r';\n  minPrice: any;\n  maxPrice: any;\n\n  cakesList: any = [];\n  cakefilter: any = [];\n  constructor(\n    public cs: UserListService,\n    private route: ActivatedRoute,\n    private http: HttpClient\n  ) {\n    this.route.queryParams.subscribe((q: any) => {\n      this.http.get(this.cs.apiUrl + 'searchcakes?q=' + q.q).subscribe(\n        (res: any) => {\n          this.cakefilter = res.data;\n          this.cakesList = this.cakefilter;\n          // console.log(res.data);\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    });\n  }\n\n  ngOnInit(): void {}\n  search(query: any) {\n    // trim the white sapces from search query\n    const searchQuery = query.trim();\n\n    // check if search Query is empty space\n    if (!searchQuery || searchQuery === '')\n      return (this.cakesList = this.cakefilter);\n\n    // filter out the matched data\n    this.cakesList = this.cakefilter.filter((e: any) =>\n      e.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }\n\n  sortByPrice() {\n    if (this.minPrice || this.maxPrice) {\n      this.cakesList = this.cakefilter.filter(\n        (e: any) =>\n          (this.minPrice ? e.price >= this.minPrice : true) &&\n          (this.maxPrice ? e.price <= this.maxPrice : true)\n      );\n      return;\n    }\n\n    this.cakesList = [...this.cakefilter];\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appTest]',\n})\nexport class TestDirective {\n  @Input() enterColor: any;\n  constructor(private el: ElementRef) {\n    console.log(this.el.nativeElement);\n  }\n  ngOnInit() {\n    console.log('Color de de', this.enterColor);\n  }\n  @HostListener('mouseenter') colorChange() {\n    this.el.nativeElement.style.backgroundColor = this.enterColor;\n  }\n  @HostListener('mouseleave') colors() {\n    this.el.nativeElement.style.backgroundColor = '#eee';\n  }\n}\n","import {\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthinterceptorService implements HttpInterceptor {\n  constructor() {}\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    if (localStorage.loginUser)\n      req = req.clone({\n        setHeaders: {\n          authtoken: JSON.parse(localStorage.loginUser).token,\n        },\n      });\n\n    return next.handle(req);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css'],\n})\nexport class CheckoutComponent implements OnInit {\n  user: any = { totalPrice: this.cs.deliveryCharge };\n  cartItems: any = [];\n\n  constructor(\n    private http: HttpClient,\n    private cs: UserListService,\n    private toastr: ToastrService,\n    private router: Router\n  ) {\n    this.getCartItems();\n  }\n\n  ngOnInit(): void {}\n  getCartItems() {\n    this.http.post(this.cs.apiUrl + 'cakecart', {}).subscribe(\n      (res: any) => {\n        if (res.data) {\n          this.user.totalPrice += res.data.reduce(\n            (acc: any, item: any) => item.price * item.quantity + acc,\n            0\n          );\n\n          if (this.user.totalPrice <= 0) this.router.navigate(['/']);\n\n          return (this.cartItems = res.data);\n        }\n        console.log(res.message);\n        this.toastr.warning(res.message);\n      },\n      (err: any) => {\n        console.log(err);\n        this.toastr.error(err.message);\n      }\n    );\n  }\n\n  placeOrder() {\n    if (\n      !this.user.name ||\n      !this.user.name.trim() ||\n      !this.user.address ||\n      !this.user.address.trim() ||\n      !this.user.city ||\n      !this.user.city.trim() ||\n      !this.user.pincode ||\n      !this.user.pincode.trim() ||\n      !this.user.phone ||\n      !this.user.phone.trim()\n    ) {\n      this.toastr.warning('Input Fields should not be empty');\n      return;\n    }\n\n    if (!this.cs.phonenumber(this.user.phone)) {\n      this.toastr.warning('Please Enter the vaild phone number');\n      return;\n    }\n    if (!this.cs.pincode(this.user.pincode)) {\n      this.toastr.warning('Please Enter the vaild Pincode');\n      return;\n    }\n\n    const orderObj = { ...this.user, cakes: this.cartItems };\n    console.log(orderObj);\n  }\n}\n","<div class=\"login-section\">\n  <h1>Fill Delivery Details</h1>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input\n        name=\"name\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        [(ngModel)]=\"user.name\"\n        placeholder=\"Enter your full name\"\n        autocomplete=\"disabled\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"address\">Address</label>\n      <input\n        name=\"address\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"address\"\n        [(ngModel)]=\"user.address\"\n        placeholder=\"Enter your address\"\n        autocomplete=\"disabled\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"phone\">Phone No.</label>\n\n      <input\n        type=\"text\"\n        name=\"phone\"\n        [(ngModel)]=\"user.phone\"\n        placeholder=\"Enter a 10-digit vaild phone number\"\n        class=\"form-control\"\n        id=\"phone\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"city\">City</label>\n\n      <input\n        type=\"text\"\n        name=\"city\"\n        [(ngModel)]=\"user.city\"\n        class=\"form-control\"\n        placeholder=\"Enter your city name\"\n        id=\"city\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"pincode\">Pincode</label>\n\n      <input\n        type=\"text\"\n        name=\"pincode\"\n        [(ngModel)]=\"user.pincode\"\n        class=\"form-control\"\n        placeholder=\"Enter your area pincode\"\n        id=\"pincode\"\n      />\n    </div>\n    <!-- <div id=\"passwordHelpBlock\" class=\"form-text\">\n      <a routerLink=\"/forgetPassword\"> forget Password?</a>\n    </div> -->\n    <div class=\"form-group\">\n      <label for=\"totalPrice\">Total Price</label>\n\n      <input\n        type=\"text\"\n        name=\"totalPrice\"\n        [(ngModel)]=\"user.totalPrice\"\n        class=\"form-control\"\n        id=\"totalPrice\"\n        disabled\n      />\n    </div>\n\n    <button type=\"submit\" (click)=\"placeOrder()\" class=\"btn btn-primary\">\n      PlaceOrder\n    </button>\n  </form>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-adminsearch',\n  templateUrl: './adminsearch.component.html',\n  styleUrls: ['./adminsearch.component.css'],\n})\nexport class AdminsearchComponent implements OnInit {\n  @Input() cakearr: any;\n  searchQuery: any;\n  constructor() {}\n\n  ngOnInit(): void {}\n  filter(e: any) {\n    alert(e);\n  }\n  search() {\n    console.log(this.searchQuery, this.cakearr);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container-fluid\">\n    <form class=\"d-flex\">\n      <input\n        name=\"search\"\n        class=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        [(ngModel)]=\"searchQuery\"\n        (change)=\"search()\"\n      />\n      <div class=\"filter-container\">\n        <button type=\"button\" class=\"btn btn-warning\" (click)=\"filter('lth')\">\n          <span class=\"fas fa-sort-amount-down-alt\"></span> Low to High\n        </button>\n        <button type=\"button\" class=\"btn btn-warning\" (click)=\"filter('htl')\">\n          <i class=\"fas fa-sort-amount-up-alt\"></i> High to Low\n        </button>\n        <button type=\"button\" class=\"btn btn-warning\" (click)=\"filter('res')\">\n          <i class=\"fas fa-undo\"></i>Reset Filter\n        </button>\n      </div>\n    </form>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forgot',\n  templateUrl: './forgot.component.html',\n  styleUrls: ['./forgot.component.css']\n})\nexport class ForgotComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>forgot works!</p>\n","import { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[appCakeHighlight]'\n})\nexport class CakeHighlightDirective {\n\n  constructor() { }\n\n}\n","import { Component, Input } from '@angular/core';\n// import { trainees, cakeList } from './data';\nimport { UserListService } from './user-list.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'walkingTreeProject';\n\n\n  constructor() {}\n}\n","<div class=\"containers\">\n  <app-navbar></app-navbar>\n  <router-outlet></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.css'],\n})\nexport class FilterComponent implements OnInit {\n  constructor(public cs: UserListService) {}\n\n  ngOnInit(): void {}\n  filter(q: any) {\n    if (q === 'htl')\n      this.cs.cakeSearch = this.cs.cakeSearch.sort(\n        (cake1: any, cake2: any) => cake2.price - cake1.price\n      );\n\n    if (q === 'lth')\n      this.cs.cakeSearch = this.cs.cakeSearch.sort(\n        (cake1: any, cake2: any) => cake1.price - cake2.price\n      );\n\n    if (q === 'res') this.cs.cakeSearch = this.cs.cakeList;\n  }\n}\n","<div class=\"filter-container\">\n  <button class=\"btn btn-warning\" (click)=\"filter('lth')\">Low to High</button>\n  <button class=\"btn btn-warning\" (click)=\"filter('htl')\">High to Low</button>\n  <button class=\"btn btn-warning\" (click)=\"filter('res')\">Reset Filter</button>\n</div>\n","<div class=\"admin flex\">\n  <header class=\"admin-header flex\">\n    <h1>Cakes</h1>\n    <div class=\"admin-right\"></div>\n  </header>\n  <main class=\"admin-main flex\">\n    <div class=\"admin-products flex\">\n      <ul class=\"admin-products-list flex\" *ngIf=\"loading\">\n        <p *ngIf=\"loading !== 'upldating'\">\n          <img\n            class=\"loading\"\n            src=\"https://i.stack.imgur.com/hzk6C.gif\"\n            alt=\"\"\n          />\n          Cakes...\n        </p>\n      </ul>\n      <ul class=\"admin-products-list flex\" *ngIf=\"!loading\">\n        <!-- <app-adminsearch [cakearr]=\"cs.cakeList\"></app-adminsearch> -->\n        <li class=\"products-header\">\n          <p>Products</p>\n          <p>Price</p>\n          <p>Action</p>\n        </li>\n        <li class=\"products\" *ngFor=\"let item of cs.cakeList\">\n          <p class=\"item-title\">\n            <img [src]=\"item.image\" class=\"item-img\" alt=\"\" />\n            <span\n              ><p>{{ item.name }}</p>\n            </span>\n          </p>\n          <p>₹ {{ item.price }}</p>\n          <p>\n            <button\n              class=\"btn\"\n              (click)=\"edit(item.cakeid)\"\n              routerLink=\"/admin/editcake/{{ item.cakeid }}\"\n            >\n              <i class=\"fas fa-edit\"></i>\n            </button>\n          </p>\n        </li>\n        <li class=\"products-header\"></li>\n      </ul>\n    </div>\n  </main>\n</div>\n\n<!-- <div class=\"edit\">\n  <app-editform></app-editform>\n</div> -->\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css'],\n})\nexport class AdminComponent implements OnInit {\n  adminItems: any = [];\n  loading: any = true;\n  constructor(\n    private toastr: ToastrService,\n    public cs: UserListService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {}\n  ngDoCheck() {\n    this.loading = this.cs.cakeList.length > 0 ? false : true;\n  }\n  edit(id: any) {\n    console.log(id);\n    this.http.get(this.cs.apiUrl + 'cake/' + id).subscribe(\n      (res: any) => {\n        console.log(res.data);\n        //  = res.data;\n        //  this.dataloaded = true;\n      },\n      (req) => {}\n    );\n  }\n}\n","<table class=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\" appTest enterColor=\"#faa\">#</th>\n      <th scope=\"col\" appTest enterColor=\"#faa\">Name</th>\n      <th scope=\"col\" appTest enterColor=\"#faa\">E-mail</th>\n      <th scope=\"col\" appTest enterColor=\"#faa\">Image</th>\n      <th scope=\"col\" appTest enterColor=\"#faa\">Action</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let userInfo of user; index as i\">\n      <th scope=\"row\" appTest enterColor=\"#faa\">{{ i + 1 }}</th>\n      <td appTest enterColor=\"#faa\">{{ userInfo.name }}</td>\n      <td appTest enterColor=\"#faa\">{{ userInfo.email }}</td>\n      <td appTest enterColor=\"#faa\">\n        <img [src]=\"userInfo.image\" alt=\"\" width=\"40\" />\n      </td>\n      <td appTest enterColor=\"#faa\">\n        <button class=\"btn btn-danger\" (click)=\"deleteUser(i)\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css'],\n})\nexport class UserListComponent implements OnInit {\n  user: any = [];\n  constructor(private users: UserListService) {\n    this.user = this.users.users;\n  }\n\n  ngOnInit(): void {}\n\n  deleteUser(index: any) {\n    this.users.users.splice(index, 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ForgotComponent } from './forgot/forgot.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { CardComponent } from './card/card.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { AdditemComponent } from './additem/additem.component';\nimport { AddUserComponent } from './add-user/add-user.component';\nimport { UserListComponent } from './user-list/user-list.component';\nimport { TestDirective } from './test.directive';\nimport { CakeSliderComponent } from './cake-slider/cake-slider.component';\nimport { CakeHighlightDirective } from './cake-highlight.directive';\nimport { SearchComponent } from './search/search.component';\nimport { SearchCakeDirective } from './search-cake.directive';\nimport { HomeComponent } from './home/home.component';\nimport { SearchResultsDisComponent } from './search-results-dis/search-results-dis.component';\nimport { CakeDetailsComponent } from './cake-details/cake-details.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { CartComponent } from './cart/cart.component';\nimport { MyordersComponent } from './myorders/myorders.component';\nimport { AuthinterceptorService } from './authinterceptor.service';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { EditformComponent } from './editform/editform.component';\nimport { AdminsearchComponent } from './adminsearch/adminsearch.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ForgotComponent,\n    NavbarComponent,\n    LoginComponent,\n    SignupComponent,\n    CardComponent,\n    ForgetPasswordComponent,\n    AdditemComponent,\n    AddUserComponent,\n    UserListComponent,\n    TestDirective,\n    CakeSliderComponent,\n    CakeHighlightDirective,\n    SearchComponent,\n    SearchCakeDirective,\n    HomeComponent,\n    SearchResultsDisComponent,\n    CakeDetailsComponent,\n    FilterComponent,\n    PaginationComponent,\n    CartComponent,\n    MyordersComponent,\n    CheckoutComponent,\n    AdminComponent,\n    EditformComponent,\n    AdminsearchComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    BrowserAnimationsModule, // required animations module\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-left',\n      preventDuplicates: true,\n      enableHtml: true,\n    }), // ToastrModule added\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthinterceptorService,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-myorders',\n  templateUrl: './myorders.component.html',\n  styleUrls: ['./myorders.component.css'],\n})\nexport class MyordersComponent implements OnInit {\n  user: any = {};\n  showImg: any = true;\n  constructor(\n    private http: HttpClient,\n    private cs: UserListService,\n    private toastr: ToastrService\n  ) {}\n\n  upload(e: any) {\n    e = e.target;\n    const file: any = e.querySelector('#image'),\n      img: any = e.querySelector('.preview-img img'),\n      // create formData object from FromData Class\n      formData: any = new FormData();\n\n    // check if user has uploaded image or not\n    if (!file.files[0]) {\n      this.toastr.info('First Choose the image File!!');\n      this.toastr.info('Then click on upload');\n      return;\n    }\n\n    // show uploading message\n    this.toastr.info('Uploading.....', '', {\n      progressBar: true,\n      timeOut: 2000,\n      progressAnimation: 'increasing',\n    });\n\n    // append uploaded file to formData\n    formData.append('file', file.files[0]);\n\n    let user = JSON.parse(localStorage.loginUser);\n\n    // generating http post request\n    this.http.post(this.cs.apiUrl + 'upload', formData).subscribe(\n      (res: any) => {\n        if (res.imageUrl) {\n          console.log(res);\n          this.toastr.success('Image Uploaded Successfuly');\n          img.src = res.imageUrl;\n        } else {\n          this.toastr.info('Please Upload a valid Image File');\n          this.toastr.warning('Image Upload failed!!');\n        }\n      },\n      (err) => {\n        console.log(err);\n        this.toastr.error('Image Upload failed!!');\n      }\n    );\n  }\n\n  imgPreview(imgEl: any) {\n    const file: any = imgEl.target,\n      imgOutput: any = document.querySelector('.preview-img img');\n\n    imgOutput.src = URL.createObjectURL(file.files[0]);\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"login-section\">\n  <h1>Login Form</h1>\n  <form (submit)=\"upload($event)\">\n    <div class=\"form-group\">\n      <label for=\"image\">Image</label>\n      <div class=\"preview-img\">\n        <img src=\"\" alt=\"\" />\n      </div>\n      <input\n        type=\"file\"\n        name=\"image\"\n        (change)=\"imgPreview($event)\"\n        class=\"form-control\"\n        id=\"image\"\n      />\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\n  </form>\n</div>\n","<div class=\"login-section\">\n  <h1>Edit Cake Details</h1>\n  <ul class=\"cart-products-list flex\" *ngIf=\"loading\">\n    <p>\n      <img class=\"loading\" src=\"https://i.stack.imgur.com/hzk6C.gif\" alt=\"\" />\n      Cake Details...\n    </p>\n  </ul>\n  <form *ngIf=\"!loading && cake\" (submit)=\"saveChanges()\">\n    <div class=\"form-group\">\n      <label for=\"image\">Product Image :</label>\n      <div class=\"preview-img\">\n        <img [src]=\"cake.image\" alt=\"\" />\n      </div>\n      <div class=\"flex\">\n        <input\n          type=\"file\"\n          name=\"image\"\n          (change)=\"imgPreview($event)\"\n          class=\"form-control\"\n          id=\"image\"\n        />\n\n        <button type=\"button\" (click)=\"upload($event)\" class=\"btn btn-primary\">\n          Upload\n        </button>\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Cake Name :</label>\n      <input\n        name=\"name\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        placeholder=\"Enter your full name\"\n        autocomplete=\"disabled\"\n        [(ngModel)]=\"cake.name\"\n      />\n    </div>\n    <div class=\"form-group flex owner-details\">\n      <div>\n        <label for=\"price\">Price :</label>\n        ₹<input\n          type=\"text\"\n          name=\"price\"\n          class=\"form-control\"\n          [(ngModel)]=\"cake.price\"\n          placeholder=\"Enter your cake price\"\n          id=\"price\"\n        />\n      </div>\n      <div>\n        <label for=\"weight\">Weight :</label>\n        <input\n          type=\"text\"\n          name=\"weight\"\n          class=\"form-control\"\n          [(ngModel)]=\"cake.weight\"\n          placeholder=\"Enter your cake weight\"\n          id=\"weight\"\n        />\n        Kg\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"description\">Description :</label>\n      <input\n        name=\"description\"\n        type=\"text\"\n        class=\"form-control\"\n        id=\"description\"\n        [(ngModel)]=\"cake.description\"\n        placeholder=\"Enter your address\"\n        autocomplete=\"disabled\"\n      />\n    </div>\n    <div class=\"form-group flex\">\n      <div class=\"flex\">\n        <label for=\"type\">Type :</label>\n        <input\n          name=\"type\"\n          type=\"text\"\n          class=\"form-control\"\n          id=\"type\"\n          [(ngModel)]=\"cake.type\"\n          placeholder=\"Enter cake type\"\n          autocomplete=\"disabled\"\n        />\n      </div>\n      <div class=\"flex\">\n        <label for=\"eggless\">Eggless :</label>\n        <input\n          type=\"checkbox\"\n          name=\"eggless\"\n          [(ngModel)]=\"cake.eggless\"\n          id=\"eggless\"\n        />\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"flavour\">Flavour :</label>\n\n      <input\n        type=\"text\"\n        name=\"flavour\"\n        class=\"form-control\"\n        [(ngModel)]=\"cake.flavour\"\n        placeholder=\"Enter your cake flavour\"\n        id=\"flavour\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"ingredients\">Ingredients :</label>\n      <div class=\"flex ingredient\">\n        <div *ngFor=\"let ingredient of cake.ingredients; index as i\">\n          <input\n            type=\"text\"\n            name=\"{{ ingredient + i }}\"\n            class=\"form-control\"\n            [(ngModel)]=\"cakeIngs[i]\"\n            (change)=\"cake.ingredients.splice(i, 1, cakeIngs[i])\"\n            placeholder=\"Enter your ingredient\"\n            [id]=\"'ingredient' + i\"\n          />\n          <button type=\"button\" class=\"btn\" (click)=\"deleteIng(i)\">\n            <i class=\"far fa-trash-alt\"></i>\n          </button>\n        </div>\n        <button type=\"button\" class=\"btn\" (click)=\"addIng($event)\">\n          <i class=\"fas fa-plus-square fa-2x\"></i>\n        </button>\n      </div>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"owner\">Owner Details :</label>\n      <div class=\"form-group flex owner-details\" id=\"owner\">\n        <div>\n          <label for=\"oemail\">Email :</label>\n          <input\n            type=\"text\"\n            name=\"oemail\"\n            class=\"form-control\"\n            [(ngModel)]=\"cake.owner.email\"\n            placeholder=\"Enter your cake flavour\"\n            id=\"oemail\"\n          />\n        </div>\n        <div>\n          <label for=\"oname\">Name :</label>\n          <input\n            type=\"text\"\n            name=\"oname\"\n            class=\"form-control\"\n            [(ngModel)]=\"cake.owner.name\"\n            placeholder=\"Enter your cake flavour\"\n            id=\"oname\"\n          />\n        </div>\n      </div>\n    </div>\n\n    <!-- <div id=\"passwordHelpBlock\" class=\"form-text\">\n      <a routerLink=\"/forgetPassword\"> forget Password?</a>\n    </div> -->\n\n    <button type=\"submit\" class=\"btn btn-primary\">Save Changes</button>\n  </form>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-editform',\n  templateUrl: './editform.component.html',\n  styleUrls: ['./editform.component.css'],\n})\nexport class EditformComponent implements OnInit {\n  cake: any;\n  loading: any = true;\n  cakeIngs: any = [];\n\n  constructor(\n    private http: HttpClient,\n    private cs: UserListService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute\n  ) {\n    const id = this.route.snapshot.params.cakeId;\n    this.http.get(this.cs.apiUrl + 'cake/' + id).subscribe(\n      (res: any) => {\n        if (res.data) {\n          this.cake = res.data;\n          this.updateIngs();\n          this.loading = false;\n          return;\n        }\n        this.toastr.error(res.message);\n      },\n      (req) => {}\n    );\n  }\n\n  ngOnInit(): void {}\n\n  upload(e: any) {\n    e = e.target.parentElement.parentElement;\n    const file: any = e.querySelector('#image'),\n      img: any = document.querySelector('.preview-img img'),\n      // create formData object from FromData Class\n      formData: any = new FormData();\n\n    // check if user has uploaded image or not\n    if (!file.files[0]) {\n      this.toastr.info('Then click on upload');\n      this.toastr.info('First Choose the image File!!');\n      return;\n    }\n\n    // show uploading message\n    this.toastr.info('Image Uploading..... ', '', {\n      progressBar: true,\n      timeOut: 2000,\n      progressAnimation: 'increasing',\n    });\n\n    // append uploaded file to formData\n    formData.append('file', file.files[0]);\n\n    let user = JSON.parse(localStorage.loginUser);\n\n    // generating http post request\n    this.http.post(this.cs.apiUrl + 'upload', formData).subscribe(\n      (res: any) => {\n        if (res.imageUrl) {\n          this.toastr.success('Image Uploaded Successfuly');\n\n          this.cake.image = res.imageUrl;\n        } else {\n          this.toastr.info('Please Upload a valid Image File');\n          this.toastr.warning('Image Upload failed!!');\n        }\n      },\n      (err) => {\n        console.log(err);\n        this.toastr.error('Image Upload failed!!');\n      }\n    );\n  }\n  imgPreview(imgEl: any) {\n    const file: any = imgEl.target,\n      imgOutput: any = document.querySelector('.preview-img img');\n\n    imgOutput.src = URL.createObjectURL(file.files[0]);\n  }\n  saveChanges() {\n    if (this.validateCakeDetails(this.cake)) {\n      this.cake.ingredients = this.cake.ingredients.filter((e: any) => e);\n      this.updateIngs();\n\n      console.log(this.cake);\n      return;\n    }\n    this.toastr.info('Please fill all fields correctly.');\n  }\n\n  deleteIng(i: any) {\n    this.cake.ingredients.splice(i, 1);\n    this.updateIngs();\n  }\n  addIng(e: any) {\n    e.preventDefault();\n    this.cake.ingredients.push('');\n    this.updateIngs();\n  }\n\n  updateIngs() {\n    this.cakeIngs = [];\n    this.cakeIngs = this.cake.ingredients.map((e: any) => e);\n  }\n\n  validateCakeDetails(cake: any) {\n    if (!cake.name || !cake.name.trim()) {\n      this.toastr.warning('Cake name should not be empty');\n      return false;\n    }\n    if (!+cake.price || cake.price < 1) {\n      this.toastr.warning('Price should be in rupees & greater than ₹1');\n      return false;\n    }\n    if (!+cake.weight) {\n      this.toastr.warning(\n        'Weight should be in Kg & greater than or equal to 1'\n      );\n      return false;\n    }\n    if (!cake.type || !cake.type.trim()) {\n      this.toastr.warning('Type field should not be empty');\n      return false;\n    }\n    if (!cake.flavour || !cake.flavour.trim()) {\n      this.toastr.warning('Flavour field should not be empty');\n      return false;\n    }\n    if (\n      !this.cs.validateEmail(cake.owner.email) ||\n      !cake.owner.name ||\n      !cake.owner.name.trim()\n    ) {\n      this.toastr.warning('Owner Email/name field should be correct');\n      return false;\n    }\n\n    return true;\n  }\n}\n","<div class=\"cart flex\">\n  <header class=\"cart-header flex\">\n    <h1>Your Cart</h1>\n    <div class=\"cart-right\">\n      <button\n        class=\"btn btn-primary click-effect\"\n        routerLink=\"/checkout\"\n        *ngIf=\"!loading && totalPrice\"\n      >\n        Checkout\n      </button>\n    </div>\n  </header>\n\n  <main class=\"cart-main flex\">\n    <div class=\"cart-products flex\">\n      <ul class=\"cart-products-list flex\" *ngIf=\"loading\">\n        <p *ngIf=\"loading !== 'upldating'\">\n          <img\n            class=\"loading\"\n            src=\"https://i.stack.imgur.com/hzk6C.gif\"\n            alt=\"\"\n          />\n          Your Cart Items\n        </p>\n        <p *ngIf=\"loading === 'upldating'\">\n          <img\n            class=\"loading\"\n            src=\"https://xtremexmartialarts.com/wp-content/uploads/2020/07/anim-circ-preloader.gif\"\n            alt=\"\"\n          />\n          Your Cart Items\n        </p>\n      </ul>\n      <ul class=\"cart-products-list flex\" *ngIf=\"!loading && !totalPrice\">\n        <p class=\"cart-empty\">\n          <img\n            class=\"loading\"\n            src=\"https://www.pngfind.com/pngs/b/272-2727925_cart-png.png\"\n            alt=\"\"\n          />\n          <span>\n            Your Cart is Empty.\n            <a routerLink=\"/\">Click here</a> to see Cakes</span\n          >\n        </p>\n      </ul>\n      <ul class=\"cart-products-list flex\" *ngIf=\"!loading && totalPrice\">\n        <li class=\"products-header\">\n          <p>Products</p>\n          <p>Price</p>\n          <p>Qty</p>\n          <p>Subtotal</p>\n        </li>\n        <li class=\"products\" *ngFor=\"let item of cartItems\">\n          <p class=\"item-title\">\n            <img [src]=\"item.image\" class=\"item-img\" alt=\"\" />\n            <span\n              ><p>{{ item.name }}</p>\n              <p class=\"small-text\">Weight: {{ item.weight }} kg</p>\n            </span>\n          </p>\n          <p>₹ {{ item.price }}</p>\n          <p>\n            <input\n              type=\"number\"\n              [(ngModel)]=\"item.quantity\"\n              (change)=\"qtyValidation($event)\"\n              disabled\n            /><i\n              (click)=\"remove(item.cakeid)\"\n              class=\"fas fa-trash click-effect\"\n            ></i>\n          </p>\n          <p>₹ {{ item.quantity * item.price }}</p>\n        </li>\n        <li class=\"products-header\"></li>\n        <li class=\"products-header total\">\n          <p></p>\n          <p></p>\n          <p>Total :</p>\n          <p class=\"total\">\n            <span class=\"delivery-charge\"> ₹ {{ totalPrice }}</span>\n            <span class=\"delivery-charge\"\n              >Delivery Charge: + {{ deliveryCharge }}</span\n            >\n            <span class=\"total-price\">\n              {{ totalPrice ? totalPrice + deliveryCharge : totalPrice }}\n            </span>\n          </p>\n        </li>\n      </ul>\n    </div>\n  </main>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css'],\n})\nexport class CartComponent implements OnInit {\n  qty: any = 1;\n  deliveryCharge: any = this.cs.deliveryCharge;\n  cartItems: any = [];\n  loading: any = true;\n  totalPrice: any = 0;\n  constructor(\n    private toastr: ToastrService,\n    private cs: UserListService,\n    private http: HttpClient\n  ) {\n    this.getCartItems();\n  }\n\n  getCartItems() {\n    this.http.post(this.cs.apiUrl + 'cakecart', {}).subscribe(\n      (res: any) => {\n        if (res.data) {\n          this.loading = false;\n          return (this.cartItems = res.data);\n        }\n        console.log(res.message);\n        this.toastr.warning(res.message);\n      },\n      (err: any) => {\n        console.log(err);\n        this.toastr.error(err.message);\n      }\n    );\n  }\n  ngDoCheck() {\n    this.totalPrice = this.cartItems.reduce(\n      (acc: any, item: any) => item.price * item.quantity + acc,\n      0\n    );\n  }\n\n  qtyValidation(e: any) {\n    e = e.target;\n    if (e.value <= 0) e.value = 1;\n  }\n\n  ngOnInit(): void {}\n  remove(id: any) {\n    this.http\n      .post(this.cs.apiUrl + 'removecakefromcart', { cakeid: id })\n      .subscribe(\n        (res: any) => {\n          console.log(res);\n          if (res.message === 'Removed  item from cart') {\n            this.toastr.success(res.message);\n            this.loading = 'upldating';\n            this.getCartItems();\n            return;\n          }\n          this.toastr.warning(res.message);\n        },\n        (err: any) => {\n          console.log(err);\n          this.toastr.error(err.message);\n        }\n      );\n  }\n}\n","<div\n  id=\"carouselExampleControls\"\n  class=\"carousel slide\"\n  data-bs-ride=\"carousel\"\n>\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n      <img [src]=\"sliderImg[0]\" class=\"d-block w-100\" alt=\"...\" />\n    </div>\n    <div class=\"carousel-item\" *ngFor=\"let img of sliderImg.slice(1)\">\n      <img [src]=\"img\" class=\"d-block w-100\" alt=\"...\" />\n    </div>\n  </div>\n  <button\n    class=\"carousel-control-prev\"\n    type=\"button\"\n    data-bs-target=\"#carouselExampleControls\"\n    data-bs-slide=\"prev\"\n  >\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Previous</span>\n  </button>\n  <button\n    class=\"carousel-control-next\"\n    type=\"button\"\n    data-bs-target=\"#carouselExampleControls\"\n    data-bs-slide=\"next\"\n  >\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"visually-hidden\">Next</span>\n  </button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-cake-slider',\n  templateUrl: './cake-slider.component.html',\n  styleUrls: ['./cake-slider.component.css'],\n})\nexport class CakeSliderComponent implements OnInit {\n  // Slider images\n  sliderImg: any = this.cs.sliderImgs;\n\n  constructor(public cs: UserListService) {}\n\n  ngOnInit(): void {}\n}\n","<nav aria-label=\"Page navigation example\">\n  <ul class=\"pagination justify-content-center\">\n    <li class=\"page-item {{ currentp === 1 ? 'disabled' : '' }}\">\n      <a\n        class=\"page-link click-effect\"\n        (click)=\"showPage(currentp - 1)\"\n        tabindex=\"-1\"\n        aria-disabled=\"true\"\n        >Previous</a\n      >\n    </li>\n\n    <li\n      class=\"page-item click-effect\"\n      *ngFor=\"let page of paginationArr; index as i\"\n      (click)=\"showPage(page)\"\n    >\n      <a class=\"page-link\">{{ page }}</a>\n    </li>\n\n    <li\n      class=\"page-item {{\n        currentp === paginationArr.length ? 'disabled' : ''\n      }}\"\n    >\n      <a class=\"page-link click-effect\" (click)=\"showPage(+currentp + 1)\"\n        >Next</a\n      >\n    </li>\n  </ul>\n</nav>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css'],\n})\nexport class PaginationComponent implements OnInit {\n  currentp: any = 1;\n  noOfpages: any;\n  paginationArr: any;\n  @Input() cakesArr: any = [];\n  start: any;\n  end: any;\n  resultPerPage: any = 12;\n  constructor(private cs: UserListService) {}\n  showPage(page: any) {\n    this.currentp = page;\n    this.pagination();\n    console.log(this.currentp);\n  }\n  pagination() {\n    this.noOfpages = Math.ceil(this.cakesArr.length / this.resultPerPage);\n    this.start = (this.currentp - 1) * this.resultPerPage;\n    this.end = this.currentp * this.resultPerPage;\n    this.paginationArr = Array(this.noOfpages);\n    this.paginationArr = Array.from(this.paginationArr, (e, i) => i + 1);\n\n    this.cs.cakeSearch = this.cakesArr.slice(this.start, this.end);\n  }\n\n  ngOnInit(): void {\n    this.pagination();\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable, Input } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { sliderImgs, cakeList, users } from './data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserListService {\n  users: any = [];\n  sliderImgs: any = sliderImgs;\n  cakeList: any = [];\n  cakeSearch: any = [];\n  deliveryCharge: any = 45;\n  userData: any = users;\n  apiUrl: any = 'https://apifromashu.herokuapp.com/api/';\n\n  constructor(private http: HttpClient, private toastr: ToastrService) {\n    this.http.get(this.apiUrl + 'allcakes').subscribe(\n      (res: any) => {\n        if (res.data) this.cakeList = res.data;\n        this.cakeSearch = [...this.cakeList];\n        // console.log(res.data);\n      },\n      (err) => {\n        console.log(err);\n        this.toastr.error(err.message, 'Error in loading Cakes', {\n          positionClass: 'toast-top-full-width',\n          timeOut: 10000,\n        });\n      }\n    );\n  }\n  phonenumber(number: any) {\n    const phoneno = /^\\d{10}$/;\n    if (number.match(phoneno)) return true;\n    else return false;\n  }\n  pincode(code: any) {\n    return /^(\\d{4}|\\d{6})$/.test(code);\n  }\n  getCakeDetails(id: any) {\n    let cake: any = {};\n    this.http.get(this.apiUrl + 'cake/' + id).subscribe(\n      (res: any) => {\n        // console.log(res.data);\n        cake = res.data;\n      },\n      (req) => {}\n    );\n    return cake;\n  }\n\n  validateEmail(email: any) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { UserListService } from './user-list.service';\n\n@Directive({\n  selector: '[appSearchCake]',\n})\nexport class SearchCakeDirective {\n  @Input() searchKey: any;\n  constructor(private cs: UserListService) {}\n\n  ngOnChanges(changes: any) {\n    if (changes.searchKey.firstChange) return;\n    // trim the white sapces from search query\n    const searchQuery = this.searchKey.trim();\n\n    // check if search Query is empty space\n    if (!searchQuery) {\n      this.cs.cakeSearch = [...this.cs.cakeList];\n      return;\n    }\n\n    // filter out the matched data\n    this.cs.cakeSearch = this.cs.cakeList.filter((e: any) =>\n      e.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" routerLink=\"/\"\n      ><img src=\"assets/logo.png\" alt=\"cake-house\" class=\"logo\" />\n      <span class=\"highlight\"> CakeHouse</span></a\n    >\n    <form class=\"flex\">\n      <input\n        class=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        name=\"search\"\n        [(ngModel)]=\"searchQ\"\n        aria-label=\"Search\"\n      />\n      <button class=\"btn btn-success\" (click)=\"search()\" type=\"submit\">\n        Search\n      </button>\n    </form>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <form class=\"flex\">\n        <button\n          *ngIf=\"!userLogin\"\n          class=\"btn btn-dark btn-border-primary\"\n          type=\"button\"\n          routerLink=\"/login\"\n        >\n          Login\n        </button>\n        <button\n          *ngIf=\"userLogin\"\n          class=\"btn btn-dark btn-border-primary\"\n          type=\"button\"\n          routerLink=\"/myorders\"\n        >\n          Upload\n        </button>\n        <button\n          *ngIf=\"userLogin\"\n          class=\"btn btn-dark btn-border-primary\"\n          type=\"button\"\n          routerLink=\"/cart\"\n        >\n          <i class=\"fas fa-shopping-cart\"></i>\n        </button>\n        <button\n          *ngIf=\"userLogin\"\n          class=\"btn btn-dark btn-border-primary\"\n          type=\"button\"\n          (click)=\"logout()\"\n        >\n          Logout\n        </button>\n      </form>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  searchQ: any;\n  userLogin: any = false;\n  constructor(private router: Router, private toastr: ToastrService) {}\n\n  search() {\n    if (this.searchQ)\n      this.router.navigate(['/search'], {\n        queryParams: { q: this.searchQ },\n      });\n  }\n  ngDoCheck() {\n    if (localStorage.loginUser) this.userLogin = true;\n    if (!localStorage.loginUser) {\n      this.userLogin = false;\n    }\n  }\n  logout() {\n    localStorage.removeItem('loginUser');\n    this.toastr.success('Logout Successfully!!');\n    this.router.navigate(['/login']);\n  }\n  ngOnInit(): void {}\n}\n","<div\n  class=\"card\"\n  style=\"width: 18rem; height: 18rem\"\n  appCakeHighlight\n  routerLink=\"/cakes/{{ cake.cakeid }}\"\n>\n  <div *ngIf=\"cake.eggless !== undefined\">\n    <span *ngIf=\"!cake.eggless\"><img src=\"assets/nonVeg.png\" alt=\"\" /></span>\n    <span *ngIf=\"cake.eggless\"><img src=\"assets/veg.png\" alt=\"\" /></span>\n  </div>\n  <img [src]=\"cake.image\" class=\"card-img-top\" alt=\"...\" />\n\n  <div class=\"card-body\">\n    <h5 class=\"card-title\">{{ cake.name }}</h5>\n    <p class=\"card-text\">₹{{ cake.price }}</p>\n    <p class=\"card-text\" *ngIf=\"cake.weight\">{{ cake.weight }} Kg</p>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css'],\n})\nexport class CardComponent implements OnInit {\n  @Input() cake: any;\n\n  constructor(private route: Router) {}\n\n  ngOnInit(): void {}\n \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoginServiceService } from '../login-service.service';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  user: any = {};\n  message: any;\n  constructor(\n    private ls: LoginServiceService,\n    private http: HttpClient,\n    private route: Router,\n    private toastr: ToastrService,\n    private cs: UserListService\n  ) {}\n\n  ngOnInit(): void {}\n  signUp() {\n    if (!this.ls.validateEmail(this.user.email)) {\n      this.toastr.warning('PLease Enter the Correct Email Id.');\n      return;\n    }\n\n    if (\n      !this.user.name ||\n      !this.user.name.trim() ||\n      !this.user.password ||\n      !this.user.password.trim()\n    ) {\n      this.toastr.warning('Please Fill the all input Fields.');\n      return;\n    }\n\n    if (this.user.name.startsWith(' ') || this.user.password.startsWith(' ')) {\n      this.toastr.warning('User name/password should not start with space.');\n      return;\n    }\n\n    const apiUrl = this.cs.apiUrl + 'register';\n    this.http.post(apiUrl, this.user).subscribe(\n      (res: any) => {\n        this.message = res.message;\n        if (this.message === 'User Already Exists') {\n          this.toastr.success(`${this.message}. Redirecting to Login Page.`);\n          setTimeout(() => {\n            this.route.navigate(['/login'], {\n              queryParams: { q: this.user.email },\n            });\n          }, 2000);\n        }\n      },\n      (err: any) => {\n        console.log(err);\n        this.message = err.message;\n        this.toastr.error(this.message);\n      }\n    );\n  }\n}\n","<div class=\"signup-section\">\n  <h1>SignUp Form</h1>\n  <form>\n    <div class=\"form-group\">\n      <label class=\"error\">{{ message }}</label>\n    </div>\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        id=\"name\"\n        name=\"name\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"user.name\"\n      />\n      <label for=\"email\">Email address</label>\n      <input\n        type=\"email\"\n        class=\"form-control\"\n        id=\"email\"\n        name=\"email\"\n        aria-describedby=\"emailHelp\"\n        [(ngModel)]=\"user.email\"\n      />\n      <!-- <small id=\"emailHelp\" class=\"form-text text-muted\"\n        >We'll never share your email with anyone else.</small\n      > -->\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n      <input\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        class=\"form-control\"\n        id=\"password\"\n      />\n    </div>\n\n    <button type=\"submit\" (click)=\"signUp()\" class=\"btn btn-primary\">\n      SignUp\n    </button>\n  </form>\n</div>\n\n<!-- Modal -->\n<div\n  class=\"modal\"\n  id=\"exampleModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"exampleModalLabel\"\n>\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Message</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\"></div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n          Close\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n})\nexport class SearchComponent implements OnInit {\n  searchQuery: any;\n  constructor(private cs: UserListService) {}\n  filter(q: any) {\n    if (q === 'htl')\n      this.cs.cakeSearch = this.cs.cakeSearch.sort(\n        (cake1: any, cake2: any) => cake2.price - cake1.price\n      );\n\n    if (q === 'lth')\n      this.cs.cakeSearch = this.cs.cakeSearch.sort(\n        (cake1: any, cake2: any) => cake1.price - cake2.price\n      );\n\n    if (q === 'res') this.cs.cakeSearch = [...this.cs.cakeList];\n  }\n  ngOnInit(): void {}\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container-fluid\">\n    <form class=\"d-flex\">\n      <!-- <input\n        name=\"search\"\n        class=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n        [(ngModel)]=\"searchQuery\"\n        appSearchCake\n        [searchKey]=\"searchQuery\"\n      /> -->\n      <div class=\"filter-container\">\n        <button class=\"btn btn-warning\" (click)=\"filter('lth')\">\n          <span class=\"fas fa-sort-amount-down-alt\"></span> Low to High\n        </button>\n        <button class=\"btn btn-warning\" (click)=\"filter('htl')\">\n          <i class=\"fas fa-sort-amount-up-alt\"></i> High to Low\n        </button>\n        <button class=\"btn btn-warning\" (click)=\"filter('res')\">\n          <i class=\"fas fa-undo\"></i>Reset Filter\n        </button>\n      </div>\n    </form>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { CakeDetailsComponent } from './cake-details/cake-details.component';\nimport { CartComponent } from './cart/cart.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { EditformComponent } from './editform/editform.component';\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { MyordersComponent } from './myorders/myorders.component';\nimport { SearchResultsDisComponent } from './search-results-dis/search-results-dis.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'forgetPassword', component: ForgetPasswordComponent },\n  { path: 'search', component: SearchResultsDisComponent },\n  { path: 'cakes/:cakeId', component: CakeDetailsComponent },\n  { path: 'cart', component: CartComponent },\n  { path: 'myorders', component: MyordersComponent },\n  { path: 'checkout', component: CheckoutComponent },\n  { path: 'admin', component: AdminComponent },\n  { path: 'admin/editcake/:cakeId', component: EditformComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoginServiceService } from '../login-service.service';\nimport { UserListService } from '../user-list.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  user: any = {};\n\n  constructor(\n    private ls: LoginServiceService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private toastr: ToastrService,\n    private cs: UserListService\n  ) {\n    if (this.route.snapshot.queryParams.q) {\n      this.user.email = this.route.snapshot.queryParams.q;\n    }\n  }\n\n  ngOnInit(): void {}\n  login() {\n    // check for empty email/password field\n    if (\n      !this.user.email ||\n      !this.user.password ||\n      this.user.email === ' ' ||\n      this.user.password === ' '\n    ) {\n      this.toastr.error('Email/Password fields should not be empty ', 'Error', {\n        timeOut: 1000,\n        enableHtml: true,\n      });\n      return;\n    }\n\n    // validate Email/password field if not empty\n    if (this.ls.validateEmail(this.user.email)) {\n      const apiUrl = this.cs.apiUrl + 'login';\n      this.http.post(apiUrl, this.user).subscribe(\n        (res: any) => {\n          if (res.token) {\n            localStorage.setItem('loginUser', JSON.stringify(res));\n            this.toastr.success('Login Successfully!!');\n            this.router.navigate(['/']);\n          } else {\n            localStorage.removeItem('loginUser');\n            this.toastr.warning(res.message);\n          }\n        },\n        (err) => {\n          this.toastr.error(err.message);\n        }\n      );\n    } else this.toastr.error('Invalid Email Id/Password');\n  }\n}\n","<div class=\"login-section\">\n  <h1>Login Form</h1>\n  <form>\n    <div class=\"form-group\">\n      <label for=\"email\">Email address</label>\n      <input\n        name=\"email\"\n        type=\"email\"\n        class=\"form-control\"\n        id=\"email\"\n        [(ngModel)]=\"user.email\"\n        aria-describedby=\"emailHelp\"\n        autocomplete=\"disabled\"\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"password\">Password</label>\n\n      <input\n        type=\"password\"\n        name=\"password\"\n        [(ngModel)]=\"user.password\"\n        class=\"form-control\"\n        id=\"password\"\n      />\n    </div>\n    <div id=\"passwordHelpBlock\" class=\"form-text\">\n      <a routerLink=\"/forgetPassword\"> forget Password?</a>\n    </div>\n\n    <button type=\"submit\" (click)=\"login()\" class=\"btn btn-primary\">\n      Login\n    </button>\n    <div id=\"passwordHelpBlock\" class=\"form-text\">\n      New user? <a routerLink=\"/signup\">SignUp</a>\n    </div>\n  </form>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}